name: Open a PR that prepares the policy for release

on:
  workflow_call:
    secrets:
      APP_ID:
        description: "GitHub App ID used to generate a token for the repository dispatch"
        required: true
      APP_PRIVATE_KEY:
        description: "GitHub App Private Key used to generate a token for the repository dispatch"
        required: true

jobs:
  check-changes:
    name: Check for changes since the last tag
    runs-on: ubuntu-latest
    outputs:
      changes: ${{ steps.check-changes.outputs.changes }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Check for changes since the last tag
        id: check-changes
        shell: bash
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            echo "No previous tag found. Proceeding with the workflow."
            echo "changes=true" >> $GITHUB_OUTPUT
          else
            echo "Last tag: $LAST_TAG"
            CHANGES=$(git diff --name-only "$LAST_TAG"..HEAD)
            if [ -z "$CHANGES" ]; then
              echo "No changes detected since the last tag."
              echo "changes=false" >> $GITHUB_OUTPUT
            else
              echo "Changes detected since the last tag."
              echo "changes=true" >> $GITHUB_OUTPUT
            fi
          fi

  open-release-pr:
    name: Open a PR that prepares policy for release
    needs: check-changes
    if: needs.check-changes.outputs.changes == 'true'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Check for changes since the last tag
        id: check-changes
        shell: bash
        run: |
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          if [ -z "$LAST_TAG" ]; then
            echo "No previous tag found. Proceeding with the workflow."
            echo "changes=true" >> $GITHUB_ENV
          else
            echo "Last tag: $LAST_TAG"
            CHANGES=$(git diff --name-only "$LAST_TAG"..HEAD)
            if [ -z "$CHANGES" ]; then
              echo "No changes detected since the last tag."
              echo "changes=false" >> $GITHUB_ENV
              exit 0
            else
              echo "Changes detected since the last tag."
              echo "changes=true" >> $GITHUB_ENV
            fi
          fi

      - name: Install Updatecli in the runner
        uses: updatecli/updatecli-action@0224b21c3687ac1a7510298d58c9a42db84e5814 # v2.92.0

      - uses: actions/create-github-app-token@a8d616148505b5069dccd32f177bb87d7f39123b # v2.1.1
        id: generate-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Restore cargo-set-version from cache
        if: hashFiles('**/Cargo.toml') != ''
        id: restore-cache
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: ~/.cargo/bin
          key: cargo-edit-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            cargo-edit-${{ runner.os }}-

      - name: Install cargo-set-version
        if: >
          hashFiles('**/Cargo.toml') != '' &&
          ! steps.restore-cache.outputs.cache-hit
        run: cargo install cargo-edit

      - name: Create values.yaml for Updatecli
        run: |
          cat <<EOF > values.yaml
          github:
            owner: "${{ github.repository_owner }}"
            repo: "${{ github.event.repository.name }}"
            branch: "main"
            git_author: "Kubewarden bot"
            git_email: "cncf-kubewarden-maintainers@lists.cncf.io"

          pr:
            labels:
              - "TRIGGER-RELEASE"
              - "kind/chore"
              - "area/release"
            reviewers:
              - "kubewarden/kubewarden-developers"
          EOF

      - name: Open PR with updatecli
        id: open-release-pr
        env:
          UPDATECLI_GITHUB_OWNER: ${{ github.repository_owner }}
          UPDATECLI_GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |-
          updatecli apply ghcr.io/kubewarden/automation/updatecli/open-release-pr:0.1.1 \
            --values $(pwd)/values.yaml
