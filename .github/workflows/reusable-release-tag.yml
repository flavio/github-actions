---
name: Tag and Release on PR Merge

on:
  workflow_call:
    inputs:
      trigger_release:
        type: boolean
        description: "Tag and trigger release manually"
        required: false
        default: true

jobs:
  tag-and-release:
    if: >
      github.event.pull_request.merged == true &&
      contains(github.event.pull_request.labels.*.name, 'TRIGGER-RELEASE') ||
      github.event.inputs.trigger_release == 'true'
    name: Tag and push, triggering release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0 # also checkout tags

      - name: Extract version from metadata.yml
        id: extract-version
        run: |
          if [ -f metadata.yml ]; then
            VERSION=$(yq e '.annotations."io.kubewarden.policy.version"' metadata.yml)
            if [ -z "$VERSION" ]; then
              echo "annotation 'io.kubewarden.policy.version' is missing in metadata.yml"
              exit 1
            fi
          elif [ -f metadata.yaml ]; then
            VERSION=$(yq e '.annotations."io.kubewarden.policy.version"' metadata.yaml)
            if [ -z "$VERSION" ]; then
              echo "annotation 'io.kubewarden.policy.version' is missing in metadata.yaml"
              exit 1
            fi
          else
            echo "Error: metadata.yml or metadata.yaml not found" >&2
            exit 1
          fi
          echo "found version $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Configure Git author
        run: |
          git config user.name "Kubewarden bot"
          git config user.email "cncf-kubewarden-maintainers@lists.cncf.io"

      - name: Create and push tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git tag -a "v$VERSION" -m "Release version $VERSION"
          git push origin "v$VERSION"

      - name: Trigger release workflow
        run: gh workflow run release.yml --ref "v$VERSION"
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Delete branch corresponding to the PR
        if: github.event.pull_request.head.ref != 'main'
        run: |
          git push origin --delete ${{ github.event.pull_request.head.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
