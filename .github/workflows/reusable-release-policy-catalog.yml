name: Kubewarden Policy Catalog Release

on:
  workflow_call:
    inputs:
      policy-name:
        description: "The name of the policy. This is used in monorepos where multiple policies can be released"
        required: false
        type: string
      policy-working-dir:
        description: "Working directory of the policy. Useful for repos with policies in folders"
        required: false
        type: string
        default: "."
    secrets:
      APP_ID:
        description: "GitHub App ID used to generate a token for the repository dispatch"
        required: true
      APP_PRIVATE_KEY:
        description: "GitHub App Private Key used to generate a token for the repository dispatch"
        required: true

jobs:
  release-catalog:
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    steps:
      - name: Generate token
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v2.1.4
        id: generate-token
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          # Set the owner, so the token can be used for cross-repo dispatch
          owner: ${{ github.repository_owner }}
      - name: Prepare catalog payload
        id: catalog-payload
        run: |
          PAYLOAD=$(jq -n \
            --arg owner "${{ github.repository_owner }}" \
            --arg repo "${{ github.event.repository.name }}" \
            --arg tag "${{ github.ref_name }}" \
            '{
              event_type: "release-policy",
              client_payload: {
                owner: $owner,
                repo: $repo,
                tag: $tag
              }
            }')

          if [ -n "${{ inputs.policy-name }}" ]; then
            PAYLOAD=$(echo "$PAYLOAD" | jq --arg chart_dir "${{ inputs.policy-name }}" '.client_payload.chart_dir = $chart_dir')
          fi

          if [ "${{ inputs.policy-working-dir }}" != "." ]; then
            PAYLOAD=$(echo "$PAYLOAD" | jq --arg policy_working_dir "${{ inputs.policy-working-dir }}" '.client_payload.policy_working_dir = $policy_working_dir')
          fi

          echo "$PAYLOAD"
          echo "$PAYLOAD" >> payload.json
      - name: Release policy catalog
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          gh api repos/${{ github.repository_owner }}/policy-catalog/dispatches \
            -X POST \
            --input payload.json
